{"remainingRequest":"/Users/scottjoscelyne/Desktop/oasis/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/Users/scottjoscelyne/Desktop/oasis/node_modules/formiojs/PDF.js","dependencies":[{"path":"/Users/scottjoscelyne/Desktop/oasis/node_modules/formiojs/PDF.js","mtime":1581861142187},{"path":"/Users/scottjoscelyne/Desktop/oasis/node_modules/cache-loader/dist/cjs.js","mtime":1571276078087},{"path":"/Users/scottjoscelyne/Desktop/oasis/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1571276072802}],"contextDependencies":[],"result":["\"use strict\";\n\nrequire(\"core-js/modules/es.symbol\");\n\nrequire(\"core-js/modules/es.symbol.description\");\n\nrequire(\"core-js/modules/es.symbol.iterator\");\n\nrequire(\"core-js/modules/es.array.find\");\n\nrequire(\"core-js/modules/es.array.iterator\");\n\nrequire(\"core-js/modules/es.array.join\");\n\nrequire(\"core-js/modules/es.function.name\");\n\nrequire(\"core-js/modules/es.object.get-own-property-descriptor\");\n\nrequire(\"core-js/modules/es.object.get-prototype-of\");\n\nrequire(\"core-js/modules/es.object.to-string\");\n\nrequire(\"core-js/modules/es.reflect.get\");\n\nrequire(\"core-js/modules/es.string.iterator\");\n\nrequire(\"core-js/modules/web.dom-collections.iterator\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _nativePromiseOnly = _interopRequireDefault(require(\"native-promise-only\"));\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nvar _Formio = _interopRequireDefault(require(\"./Formio\"));\n\nvar _Webform2 = _interopRequireDefault(require(\"./Webform\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar PDF =\n/*#__PURE__*/\nfunction (_Webform) {\n  _inherits(PDF, _Webform);\n\n  function PDF(element, options) {\n    var _this;\n\n    _classCallCheck(this, PDF);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PDF).call(this, element, options)); // Resolve when the iframe is ready.\n\n    _this.iframeReady = new _nativePromiseOnly.default(function (resolve) {\n      return _this.iframeReadyResolve = resolve;\n    });\n    return _this;\n  }\n\n  _createClass(PDF, [{\n    key: \"postMessage\",\n    value: function postMessage(message) {\n      var _this2 = this;\n\n      if (!message || !this.iframeReady) {\n        return;\n      }\n\n      if (!message.type) {\n        message.type = 'iframe-data';\n      }\n\n      this.iframeReady.then(function () {\n        if (_this2.iframe && _this2.iframe.contentWindow) {\n          _this2.iframe.contentWindow.postMessage(JSON.stringify(message), '*');\n        }\n      });\n    } // Do not clear the iframe.\n\n  }, {\n    key: \"clear\",\n    value: function clear() {}\n  }, {\n    key: \"redraw\",\n    value: function redraw() {\n      this.postMessage({\n        name: 'redraw'\n      });\n    }\n  }, {\n    key: \"getSrc\",\n    value: function getSrc() {\n      if (!this._form || !this._form.settings || !this._form.settings.pdf) {\n        return '';\n      }\n\n      var iframeSrc = \"\".concat(this._form.settings.pdf.src, \".html\");\n      var params = [\"id=\".concat(this.id)];\n\n      if (this.options.readOnly) {\n        params.push('readonly=1');\n      }\n\n      if (this.options.zoom) {\n        params.push(\"zoom=\".concat(this.options.zoom));\n      }\n\n      if (this.options.builder) {\n        params.push('builder=1');\n      }\n\n      if (params.length) {\n        iframeSrc += \"?\".concat(params.join('&'));\n      }\n\n      return iframeSrc;\n    }\n  }, {\n    key: \"setForm\",\n    value: function setForm(form) {\n      var _this3 = this;\n\n      var formCopy = _lodash.default.cloneDeep(form);\n\n      return _get(_getPrototypeOf(PDF.prototype), \"setForm\", this).call(this, form).then(function () {\n        if (_this3.formio) {\n          form.projectUrl = _this3.formio.projectUrl;\n          form.url = _this3.formio.formUrl;\n          form.base = _this3.formio.base;\n\n          _this3.postMessage({\n            name: 'token',\n            data: _this3.formio.getToken()\n          });\n        }\n\n        _this3.postMessage({\n          name: 'form',\n          data: formCopy\n        });\n\n        return form;\n      });\n    }\n    /**\n     * Set's the value of this form component.\n     *\n     * @param submission\n     * @param flags\n     */\n\n  }, {\n    key: \"setValue\",\n    value: function setValue(submission, flags) {\n      var _this4 = this;\n\n      if ((!flags || !flags.fromIframe) && this.iframeReady) {\n        this.iframeReady.then(function () {\n          return _this4.postMessage({\n            name: 'submission',\n            data: submission\n          });\n        });\n      }\n\n      return _get(_getPrototypeOf(PDF.prototype), \"setValue\", this).call(this, submission, flags);\n    }\n  }, {\n    key: \"setSubmission\",\n    value: function setSubmission(submission) {\n      var _this5 = this;\n\n      submission.readOnly = !!this.options.readOnly;\n      return _get(_getPrototypeOf(PDF.prototype), \"setSubmission\", this).call(this, submission).then(function () {\n        if (_this5.formio) {\n          _this5.formio.getDownloadUrl().then(function (url) {\n            // Add a download button if it has a download url.\n            if (!url) {\n              return;\n            }\n\n            if (!_this5.downloadButton) {\n              if (_this5.options.primaryProject) {\n                url += \"&project=\".concat(_this5.options.primaryProject);\n              }\n\n              _this5.downloadButton = _this5.ce('a', {\n                href: url,\n                target: '_blank',\n                style: 'position:absolute;right:10px;top:110px;cursor:pointer;'\n              }, _this5.ce('img', {\n                src: require('./pdf.image'),\n                style: 'width:3em;'\n              }));\n\n              _this5.element.insertBefore(_this5.downloadButton, _this5.iframe);\n            }\n          });\n        }\n      });\n    }\n  }, {\n    key: \"addComponent\",\n    value: function addComponent(component, element, data, before, noAdd, state) {\n      // Never add the component to the DOM.\n      _get(_getPrototypeOf(PDF.prototype), \"addComponent\", this).call(this, component, element, data, before, true, state);\n    } // Iframe should always be shown.\n\n  }, {\n    key: \"showElement\",\n    value: function showElement() {}\n  }, {\n    key: \"build\",\n    value: function build() {\n      var _this6 = this;\n\n      // Do not rebuild the iframe...\n      if (this.iframe) {\n        this.addComponents();\n        return;\n      }\n\n      this.zoomIn = this.ce('span', {\n        style: 'position:absolute;right:10px;top:10px;cursor:pointer;',\n        class: 'btn btn-default btn-secondary no-disable'\n      }, this.ce('i', {\n        class: this.iconClass('zoom-in')\n      }));\n      this.addEventListener(this.zoomIn, 'click', function (event) {\n        event.preventDefault();\n\n        _this6.postMessage({\n          name: 'zoomIn'\n        });\n      });\n      this.zoomOut = this.ce('span', {\n        style: 'position:absolute;right:10px;top:60px;cursor:pointer;',\n        class: 'btn btn-default btn-secondary no-disable'\n      }, this.ce('i', {\n        class: this.iconClass('zoom-out')\n      }));\n      this.addEventListener(this.zoomOut, 'click', function (event) {\n        event.preventDefault();\n\n        _this6.postMessage({\n          name: 'zoomOut'\n        });\n      });\n      this.iframe = this.ce('iframe', {\n        src: this.getSrc(),\n        id: \"iframe-\".concat(this.id),\n        seamless: true,\n        class: 'formio-iframe'\n      }); // Handle an iframe submission.\n\n      this.on('iframe-submission', function (submission) {\n        return _this6.setValue(submission, {\n          fromIframe: true\n        });\n      }, true); // Trigger when this form is ready.\n\n      this.on('iframe-ready', function () {\n        return _this6.iframeReadyResolve();\n      }, true);\n      this.appendChild(this.element, [this.zoomIn, this.zoomOut, this.iframe]);\n\n      if (!this.options.readOnly && _lodash.default.find(this.form.components, function (component) {\n        return component.type === 'button' && component.action === 'submit' && !component.hidden;\n      })) {\n        this.submitButton = this.ce('button', {\n          type: 'button',\n          class: 'btn btn-primary'\n        }, 'Submit');\n        this.addEventListener(this.submitButton, 'click', function () {\n          return _this6.submit();\n        });\n        this.appendChild(this.element, this.submitButton);\n      }\n\n      this.addComponents();\n    }\n  }, {\n    key: \"getSubmission\",\n    value: function getSubmission() {\n      var _this7 = this;\n\n      return new _nativePromiseOnly.default(function (resolve) {\n        _this7.once('iframe-submission', resolve);\n\n        _this7.postMessage({\n          name: 'getSubmission'\n        });\n      });\n    }\n    /**\n     * Ensure we have the submission from the iframe before we submit the form.\n     *\n     * @param options\n     * @return {*}\n     */\n\n  }, {\n    key: \"submitForm\",\n    value: function submitForm() {\n      var _this8 = this;\n\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return this.getSubmission().then(function () {\n        return _get(_getPrototypeOf(PDF.prototype), \"submitForm\", _this8).call(_this8, options);\n      });\n    }\n  }]);\n\n  return PDF;\n}(_Webform2.default);\n/**\n * Listen for window messages.\n */\n\n\nexports.default = PDF;\nwindow.addEventListener('message', function (event) {\n  var eventData = null;\n\n  try {\n    eventData = typeof event.data === 'string' ? JSON.parse(event.data) : event.data;\n  } catch (err) {\n    eventData = null;\n  } // If this form exists, then emit the event within this form.\n\n\n  if (eventData && eventData.name && eventData.formId && _Formio.default.forms.hasOwnProperty(eventData.formId)) {\n    _Formio.default.forms[eventData.formId].emit(\"iframe-\".concat(eventData.name), eventData.data);\n  }\n});",null]}