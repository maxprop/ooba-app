{"remainingRequest":"/Users/scottjoscelyne/Desktop/oasis/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/Users/scottjoscelyne/Desktop/oasis/node_modules/angular-formio/grid/GridBodyComponent.js","dependencies":[{"path":"/Users/scottjoscelyne/Desktop/oasis/node_modules/angular-formio/grid/GridBodyComponent.js","mtime":1581861141284},{"path":"/Users/scottjoscelyne/Desktop/oasis/node_modules/cache-loader/dist/cjs.js","mtime":1571276078087},{"path":"/Users/scottjoscelyne/Desktop/oasis/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1571276072802}],"contextDependencies":[],"result":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nimport { Input, Output, EventEmitter, ViewChild, TemplateRef } from '@angular/core';\nimport { each, clone } from 'lodash';\nvar GridBodyComponent = /*@__PURE__*/ (function () {\n    function GridBodyComponent() {\n        this.firstItem = 0;\n        this.lastItem = 0;\n        this.skip = 0;\n        this.limit = 0;\n        this.total = 0;\n        this.rowSelect = new EventEmitter();\n        this.rowAction = new EventEmitter();\n        this.loading = true;\n    }\n    /**\n     * @param {?} formio\n     * @param {?=} query\n     * @return {?}\n     */\n    GridBodyComponent.prototype.load = /**\n     * @param {?} formio\n     * @param {?=} query\n     * @return {?}\n     */\n        function (formio, query) {\n            return Promise.resolve({});\n        };\n    /**\n     * @param {?} event\n     * @param {?} row\n     * @return {?}\n     */\n    GridBodyComponent.prototype.onRowSelect = /**\n     * @param {?} event\n     * @param {?} row\n     * @return {?}\n     */\n        function (event, row) {\n            event.preventDefault();\n            this.rowSelect.emit(row);\n        };\n    /**\n     * @param {?} event\n     * @param {?} row\n     * @param {?} action\n     * @return {?}\n     */\n    GridBodyComponent.prototype.onRowAction = /**\n     * @param {?} event\n     * @param {?} row\n     * @param {?} action\n     * @return {?}\n     */\n        function (event, row, action) {\n            event.preventDefault();\n            this.rowAction.emit({ row: row, action: action });\n        };\n    /**\n     * Set the rows for this Grid body.\n     *\n     * @param query\n     * @param items\n     * @return any\n     */\n    /**\n     * Set the rows for this Grid body.\n     *\n     * @param {?} query\n     * @param {?} items\n     * @return {?} any\n     */\n    GridBodyComponent.prototype.setRows = /**\n     * Set the rows for this Grid body.\n     *\n     * @param {?} query\n     * @param {?} items\n     * @return {?} any\n     */\n        function (query, items) {\n            var _this = this;\n            this.rows = [];\n            this.firstItem = query.skip + 1;\n            this.lastItem = this.firstItem + items.length - 1;\n            this.total = items.serverCount;\n            this.limit = query.limit;\n            this.skip = Math.floor(items.skip / query.limit) + 1;\n            this.loading = false;\n            each(items, (function (item) {\n                _this.rows.push(clone(item));\n            }));\n            return this.rows;\n        };\n    return GridBodyComponent;\n}());\nexport { GridBodyComponent };\nif (false) {\n    /** @type {?} */\n    GridBodyComponent.prototype.header;\n    /** @type {?} */\n    GridBodyComponent.prototype.actionAllowed;\n    /** @type {?} */\n    GridBodyComponent.prototype.rowSelect;\n    /** @type {?} */\n    GridBodyComponent.prototype.rowAction;\n    /** @type {?} */\n    GridBodyComponent.prototype.template;\n    /** @type {?} */\n    GridBodyComponent.prototype.rows;\n    /** @type {?} */\n    GridBodyComponent.prototype.loading;\n    /** @type {?} */\n    GridBodyComponent.prototype.firstItem;\n    /** @type {?} */\n    GridBodyComponent.prototype.lastItem;\n    /** @type {?} */\n    GridBodyComponent.prototype.skip;\n    /** @type {?} */\n    GridBodyComponent.prototype.limit;\n    /** @type {?} */\n    GridBodyComponent.prototype.total;\n}\n",null]}