{"remainingRequest":"/Users/scottjoscelyne/Desktop/oasis/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/Users/scottjoscelyne/Desktop/oasis/node_modules/formiojs/components/edittable/EditTable.js","dependencies":[{"path":"/Users/scottjoscelyne/Desktop/oasis/node_modules/formiojs/components/edittable/EditTable.js","mtime":1581861142267},{"path":"/Users/scottjoscelyne/Desktop/oasis/node_modules/cache-loader/dist/cjs.js","mtime":1571276078087},{"path":"/Users/scottjoscelyne/Desktop/oasis/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1571276072802}],"contextDependencies":[],"result":["\"use strict\";\n\nrequire(\"core-js/modules/es.symbol\");\n\nrequire(\"core-js/modules/es.symbol.description\");\n\nrequire(\"core-js/modules/es.symbol.iterator\");\n\nrequire(\"core-js/modules/es.array.concat\");\n\nrequire(\"core-js/modules/es.array.filter\");\n\nrequire(\"core-js/modules/es.array.from\");\n\nrequire(\"core-js/modules/es.array.iterator\");\n\nrequire(\"core-js/modules/es.array.join\");\n\nrequire(\"core-js/modules/es.array.map\");\n\nrequire(\"core-js/modules/es.array.slice\");\n\nrequire(\"core-js/modules/es.object.get-own-property-descriptor\");\n\nrequire(\"core-js/modules/es.object.get-prototype-of\");\n\nrequire(\"core-js/modules/es.object.to-string\");\n\nrequire(\"core-js/modules/es.reflect.get\");\n\nrequire(\"core-js/modules/es.regexp.to-string\");\n\nrequire(\"core-js/modules/es.string.iterator\");\n\nrequire(\"core-js/modules/web.dom-collections.for-each\");\n\nrequire(\"core-js/modules/web.dom-collections.iterator\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nvar _DataGrid = _interopRequireDefault(require(\"../datagrid/DataGrid\"));\n\nvar _ModalEdit = _interopRequireDefault(require(\"../modaledit/ModalEdit\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar EditTableComponent =\n/*#__PURE__*/\nfunction (_DataGridComponent) {\n  _inherits(EditTableComponent, _DataGridComponent);\n\n  _createClass(EditTableComponent, null, [{\n    key: \"schema\",\n    value: function schema() {\n      for (var _len = arguments.length, extend = new Array(_len), _key = 0; _key < _len; _key++) {\n        extend[_key] = arguments[_key];\n      }\n\n      return _DataGrid.default.schema.apply(_DataGrid.default, [{\n        label: 'Edit Table',\n        key: 'editTable',\n        type: 'edittable',\n        input: true,\n        tree: true,\n        components: [],\n        columns: []\n      }].concat(extend));\n    }\n  }, {\n    key: \"builderInfo\",\n    get: function get() {\n      return false;\n      /*\n      return {\n        title: 'Edit Table',\n        icon: 'fa fa-th',\n        group: 'data',\n        weight: 20,\n        schema: EditTableComponent.schema()\n      };\n      */\n    }\n  }]);\n\n  function EditTableComponent() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, EditTableComponent);\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(EditTableComponent)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    var groups = _lodash.default.get(_this.component, 'rowGroups', []);\n\n    if (_this.hasColumns()) {\n      _this.component.components = _this.componentComponents;\n    }\n\n    if (_this.groupsMode) {\n      _this.addEmptyRows(_this.totalRowsNumber(groups));\n    }\n\n    return _this;\n  }\n  /**\n   * Checks whether columns are available\n   * @return {Boolean}\n   */\n\n\n  _createClass(EditTableComponent, [{\n    key: \"hasColumns\",\n    value: function hasColumns() {\n      return this.getColumns().length > 0;\n    }\n    /** Don't show last col in header **/\n\n    /** @override **/\n\n  }, {\n    key: \"hasExtraColumn\",\n    value: function hasExtraColumn() {\n      return false;\n    }\n    /** @override **/\n\n  }, {\n    key: \"hasAddButton\",\n    value: function hasAddButton() {\n      return _get(_getPrototypeOf(EditTableComponent.prototype), \"hasAddButton\", this).call(this) && this.hasColumns();\n    }\n  }, {\n    key: \"componentSchema\",\n    value: function componentSchema() {\n      for (var _len3 = arguments.length, extend = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        extend[_key3] = arguments[_key3];\n      }\n\n      return _ModalEdit.default.schema.apply(_ModalEdit.default, [{\n        rows: 0,\n        editor: 'ckeditor',\n        hideLabel: true\n      }].concat(extend));\n    }\n    /**\n     * Returns all non-empty columns.\n     *\n     * @return {Array}\n     */\n\n  }, {\n    key: \"getColumns\",\n    value: function getColumns() {\n      var _this2 = this;\n\n      var cols = _lodash.default.get(this, 'component.columns', []);\n\n      return _lodash.default.filter(_lodash.default.map(cols, function (c) {\n        return _lodash.default.pick(c, ['label', 'key']);\n      }), function (c) {\n        return !_lodash.default.isEqual(c, _this2.emptyColumn);\n      });\n    }\n  }, {\n    key: \"getGroups\",\n    value: function getGroups() {\n      return _lodash.default.get(this.component, 'rowGroups', []);\n    }\n  }, {\n    key: \"totalRowsNumber\",\n    value: function totalRowsNumber(groups) {\n      return _lodash.default.sum(_lodash.default.map(groups, 'numberOfRows'));\n    }\n  }, {\n    key: \"addEmptyRows\",\n    value: function addEmptyRows(n) {\n      this.dataValue = _lodash.default.range(n).map(function () {\n        return {};\n      });\n    }\n  }, {\n    key: \"build\",\n\n    /** @override **/\n    value: function build() {\n      var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      _get(_getPrototypeOf(EditTableComponent.prototype), \"build\", this).call(this, state);\n\n      this.tableElement.className = this.tableClass;\n\n      if (this.options.builder && !this.hasColumns()) {\n        this.element.appendChild(this.builderView());\n      }\n\n      this.setMeta();\n    }\n  }, {\n    key: \"buildRows\",\n    value: function buildRows() {\n      _get(_getPrototypeOf(EditTableComponent.prototype), \"buildRows\", this).call(this);\n\n      if (this.groupsMode) {\n        this.buildGroups();\n      }\n    }\n  }, {\n    key: \"buildGroups\",\n    value: function buildGroups() {\n      var _this3 = this;\n\n      var groups = _lodash.default.get(this.component, 'rowGroups', []);\n\n      var ranges = _lodash.default.map(groups, 'numberOfRows');\n\n      var rows = this.tableElement.querySelectorAll('tbody>tr');\n      var tbody = this.tableElement.querySelector('tbody');\n      var chunks = this.getRowChunks(ranges, rows);\n      var firstElements = chunks.map(_lodash.default.head);\n      var groupElements = groups.map(function (g) {\n        return _this3.buildGroup(g);\n      });\n      groupElements.forEach(function (elt, index) {\n        var row = firstElements[index];\n\n        if (row) {\n          tbody.insertBefore(elt, row);\n        }\n      });\n    }\n    /**\n     * @param {Numbers[]} groups\n     * @param {Array<T>} coll - collection\n     *\n     * @return {Array<T[]>}\n     */\n\n  }, {\n    key: \"getRowChunks\",\n    value: function getRowChunks(groups, coll) {\n      var _groups$reduce = groups.reduce(function (_ref, size) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            startIndex = _ref2[0],\n            acc = _ref2[1];\n\n        var endIndex = startIndex + size;\n        return [endIndex, [].concat(_toConsumableArray(acc), [[startIndex, endIndex]])];\n      }, [0, []]),\n          _groups$reduce2 = _slicedToArray(_groups$reduce, 2),\n          chunks = _groups$reduce2[1];\n\n      return chunks.map(function (range) {\n        return _lodash.default.slice.apply(_lodash.default, [coll].concat(_toConsumableArray(range)));\n      });\n    }\n  }, {\n    key: \"buildGroup\",\n    value: function buildGroup(_ref3) {\n      var label = _ref3.label;\n      var colsNumber = this.getColumns().length;\n      var cell = this.ce('td', {\n        colspan: colsNumber,\n        class: 'edittable-group-label'\n      }, label);\n      return this.ce('tr', null, cell);\n    }\n    /** @override **/\n\n  }, {\n    key: \"buildRow\",\n    value: function buildRow(row, index) {\n      var _this4 = this;\n\n      var state = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n      if (this.options.builder) {\n        return null;\n      }\n\n      this.rows[index] = {};\n      var colSchemes = this.componentComponents;\n      var lastIndex = colSchemes.length - 1;\n      var columns = colSchemes.map(function (col, colIndex) {\n        var colContainer = _this4.buildComponent(col, colIndex, row, index, _this4.getComponentState(col, state));\n\n        if (_this4.hasRemoveButtons() && colIndex === lastIndex) {\n          colContainer.append(_this4.removeButton(index));\n        }\n\n        return colContainer;\n      });\n      return this.ce('tr', null, columns);\n    }\n    /** override **/\n\n  }, {\n    key: \"removeButton\",\n    value: function removeButton(index) {\n      var _this5 = this;\n\n      var type = _lodash.default.get(this.component, 'type', 'edittable');\n\n      var button = this.ce('button', {\n        type: 'button',\n        class: \"btn btn-xxs btn-danger formio-\".concat(type, \"-remove\")\n      }, this.ce('i', {\n        class: this.iconClass('remove')\n      }));\n      this.addEventListener(button, 'click', function (event) {\n        event.preventDefault();\n\n        _this5.removeValue(index);\n      });\n      return button;\n    }\n  }, {\n    key: \"builderView\",\n    value: function builderView() {\n      return this.ce('div', {\n        class: 'well edittable-placeholder'\n      }, [this.ce('i', {\n        class: this.iconClass('warning-sign')\n      }), ' ', this.t('No columns provided')]);\n    }\n  }, {\n    key: \"getMeta\",\n    value: function getMeta() {\n      var groups = this.getGroups();\n\n      if (this.hasColumns && groups.length) {\n        return groups.reduce(function (info, g) {\n          info[g.label] = g.numberOfRows;\n          return info;\n        }, {});\n      } else {\n        return null;\n      }\n    }\n  }, {\n    key: \"setMeta\",\n    value: function setMeta() {\n      var key = _lodash.default.get(this.component, 'key');\n\n      var data = this.getMeta();\n\n      if (key && data) {\n        _lodash.default.set(this.root, ['_submission', 'metadata', key], data);\n      }\n    }\n  }, {\n    key: \"emptyColumn\",\n    get: function get() {\n      return {\n        label: '',\n        key: ''\n      };\n    }\n  }, {\n    key: \"componentComponents\",\n    get: function get() {\n      var _this6 = this;\n\n      return this.getColumns().map(function (_ref4) {\n        var label = _ref4.label,\n            key = _ref4.key;\n        return _this6.componentSchema({\n          label: label,\n          key: key\n        });\n      });\n    }\n  }, {\n    key: \"tableClass\",\n    get: function get() {\n      var _this7 = this;\n\n      var type = _lodash.default.get(this.component, 'type', 'edittable');\n\n      var defaultClass = ['table', 'table-bordered', \"table-\".concat(type), 'form-group', \"formio-\".concat(type, \"-table\")].join(' ');\n\n      var className = _lodash.default.get(this.component, 'tableClass');\n\n      if (className === '' || !_lodash.default.isString(className)) {\n        className = defaultClass;\n      }\n\n      ['striped', 'bordered', 'hover', 'condensed'].forEach(function (prop) {\n        if (_this7.component[prop]) {\n          className = \"\".concat(className, \" table-\").concat(prop);\n        }\n      });\n      return className;\n    }\n  }, {\n    key: \"groupsMode\",\n    get: function get() {\n      return _lodash.default.get(this.component, 'enableRowGroups', false);\n    }\n  }]);\n\n  return EditTableComponent;\n}(_DataGrid.default);\n\nexports.default = EditTableComponent;",null]}