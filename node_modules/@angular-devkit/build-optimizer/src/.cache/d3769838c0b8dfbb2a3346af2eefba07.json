{"remainingRequest":"/Users/scottjoscelyne/Desktop/oasis/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/Users/scottjoscelyne/Desktop/oasis/node_modules/instantsearch.js/es/connectors/pagination/Paginator.js","dependencies":[{"path":"/Users/scottjoscelyne/Desktop/oasis/node_modules/instantsearch.js/es/connectors/pagination/Paginator.js","mtime":1581861144635},{"path":"/Users/scottjoscelyne/Desktop/oasis/node_modules/cache-loader/dist/cjs.js","mtime":1571276078087},{"path":"/Users/scottjoscelyne/Desktop/oasis/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1571276072802}],"contextDependencies":[],"result":["/** PURE_IMPORTS_START lodash_range PURE_IMPORTS_END */\nvar _createClass = /*@__PURE__*/ function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor)\n        descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n} } return function (Constructor, protoProps, staticProps) { if (protoProps)\n    defineProperties(Constructor.prototype, protoProps); if (staticProps)\n    defineProperties(Constructor, staticProps); return Constructor; }; }();\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n} }\nimport range from 'lodash/range';\nvar Paginator = /*@__PURE__*/ function () {\n    function Paginator(params) {\n        _classCallCheck(this, Paginator);\n        this.currentPage = params.currentPage;\n        this.total = params.total;\n        this.padding = params.padding;\n    }\n    _createClass(Paginator, [{\n            key: 'pages',\n            value: function pages() {\n                var total = this.total, currentPage = this.currentPage, padding = this.padding;\n                if (total === 0)\n                    return [0];\n                var totalDisplayedPages = this.nbPagesDisplayed(padding, total);\n                if (totalDisplayedPages === total)\n                    return range(0, total);\n                var paddingLeft = this.calculatePaddingLeft(currentPage, padding, total, totalDisplayedPages);\n                var paddingRight = totalDisplayedPages - paddingLeft;\n                var first = currentPage - paddingLeft;\n                var last = currentPage + paddingRight;\n                return range(first, last);\n            }\n        }, {\n            key: 'nbPagesDisplayed',\n            value: function nbPagesDisplayed(padding, total) {\n                return Math.min(2 * padding + 1, total);\n            }\n        }, {\n            key: 'calculatePaddingLeft',\n            value: function calculatePaddingLeft(current, padding, total, totalDisplayedPages) {\n                if (current <= padding) {\n                    return current;\n                }\n                if (current >= total - padding) {\n                    return totalDisplayedPages - (total - current);\n                }\n                return padding;\n            }\n        }, {\n            key: 'isLastPage',\n            value: function isLastPage() {\n                return this.currentPage === this.total - 1;\n            }\n        }, {\n            key: 'isFirstPage',\n            value: function isFirstPage() {\n                return this.currentPage === 0;\n            }\n        }]);\n    return Paginator;\n}();\nexport default Paginator;\n",null]}