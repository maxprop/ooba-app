{"remainingRequest":"/Users/scottjoscelyne/Desktop/oasis/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/Users/scottjoscelyne/Desktop/oasis/node_modules/instantsearch.js/es/lib/escape-highlight.js","dependencies":[{"path":"/Users/scottjoscelyne/Desktop/oasis/node_modules/instantsearch.js/es/lib/escape-highlight.js","mtime":1581861144652},{"path":"/Users/scottjoscelyne/Desktop/oasis/node_modules/cache-loader/dist/cjs.js","mtime":1571276078087},{"path":"/Users/scottjoscelyne/Desktop/oasis/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1571276072802}],"contextDependencies":[],"result":["/** PURE_IMPORTS_START lodash_reduce,lodash_escape,lodash_isArray,lodash_isPlainObject PURE_IMPORTS_END */\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n            target[key] = source[key];\n        }\n    }\n} return target; };\nfunction _defineProperty(obj, key, value) { if (key in obj) {\n    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });\n}\nelse {\n    obj[key] = value;\n} return obj; }\nimport reduce from 'lodash/reduce';\nimport escape from 'lodash/escape';\nimport isArray from 'lodash/isArray';\nimport isPlainObject from 'lodash/isPlainObject';\nexport var tagConfig = {\n    highlightPreTag: '__ais-highlight__',\n    highlightPostTag: '__/ais-highlight__'\n};\nfunction replaceWithEmAndEscape(value) {\n    return escape(value).replace(new RegExp(tagConfig.highlightPreTag, 'g'), '<em>').replace(new RegExp(tagConfig.highlightPostTag, 'g'), '</em>');\n}\nfunction recursiveEscape(input) {\n    if (isPlainObject(input) && typeof input.value !== 'string') {\n        return reduce(input, function (acc, item, key) {\n            return _extends({}, acc, _defineProperty({}, key, recursiveEscape(item)));\n        }, {});\n    }\n    if (isArray(input)) {\n        return input.map(recursiveEscape);\n    }\n    return _extends({}, input, {\n        value: replaceWithEmAndEscape(input.value)\n    });\n}\nexport default function escapeHits(hits) {\n    if (hits.__escaped === undefined) {\n        hits = hits.map(function (hit) {\n            if (hit._highlightResult) {\n                hit._highlightResult = recursiveEscape(hit._highlightResult);\n            }\n            if (hit._snippetResult) {\n                hit._snippetResult = recursiveEscape(hit._snippetResult);\n            }\n            return hit;\n        });\n        hits.__escaped = true;\n    }\n    return hits;\n}\nexport function escapeFacets(facetHits) {\n    return facetHits.map(function (h) {\n        return _extends({}, h, {\n            highlighted: replaceWithEmAndEscape(h.highlighted)\n        });\n    });\n}\n",null]}