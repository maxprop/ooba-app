{"remainingRequest":"/Users/scottjoscelyne/Desktop/oasis/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/Users/scottjoscelyne/Desktop/oasis/node_modules/formiojs/components/panel/Panel.js","dependencies":[{"path":"/Users/scottjoscelyne/Desktop/oasis/node_modules/formiojs/components/panel/Panel.js","mtime":1581861142287},{"path":"/Users/scottjoscelyne/Desktop/oasis/node_modules/cache-loader/dist/cjs.js","mtime":1571276078087},{"path":"/Users/scottjoscelyne/Desktop/oasis/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1571276072802}],"contextDependencies":[],"result":["\"use strict\";\n\nrequire(\"core-js/modules/es.symbol\");\n\nrequire(\"core-js/modules/es.symbol.description\");\n\nrequire(\"core-js/modules/es.symbol.iterator\");\n\nrequire(\"core-js/modules/es.array.concat\");\n\nrequire(\"core-js/modules/es.array.iterator\");\n\nrequire(\"core-js/modules/es.object.get-own-property-descriptor\");\n\nrequire(\"core-js/modules/es.object.get-prototype-of\");\n\nrequire(\"core-js/modules/es.object.to-string\");\n\nrequire(\"core-js/modules/es.reflect.get\");\n\nrequire(\"core-js/modules/es.string.iterator\");\n\nrequire(\"core-js/modules/web.dom-collections.iterator\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _NestedComponent2 = _interopRequireDefault(require(\"../nested/NestedComponent\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar PanelComponent =\n/*#__PURE__*/\nfunction (_NestedComponent) {\n  _inherits(PanelComponent, _NestedComponent);\n\n  _createClass(PanelComponent, null, [{\n    key: \"schema\",\n    value: function schema() {\n      for (var _len = arguments.length, extend = new Array(_len), _key = 0; _key < _len; _key++) {\n        extend[_key] = arguments[_key];\n      }\n\n      return _NestedComponent2.default.schema.apply(_NestedComponent2.default, [{\n        label: 'Panel',\n        type: 'panel',\n        key: 'panel',\n        title: '',\n        theme: 'default',\n        breadcrumb: 'default',\n        components: [],\n        clearOnHide: false,\n        input: false,\n        tableView: false,\n        dataGridLabel: false,\n        persistent: false,\n        lazyLoad: false\n      }].concat(extend));\n    }\n  }, {\n    key: \"builderInfo\",\n    get: function get() {\n      return {\n        title: 'Panel',\n        icon: 'fa fa-list-alt',\n        group: 'layout',\n        documentation: 'http://help.form.io/userguide/#panels',\n        weight: 30,\n        schema: PanelComponent.schema()\n      };\n    }\n  }]);\n\n  function PanelComponent(component, options, data) {\n    var _this;\n\n    _classCallCheck(this, PanelComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PanelComponent).call(this, component, options, data));\n    _this.lazyLoaded = false;\n    return _this;\n  }\n\n  _createClass(PanelComponent, [{\n    key: \"getContainer\",\n    value: function getContainer() {\n      return this.panelBody;\n    }\n  }, {\n    key: \"getCollapseIcon\",\n    value: function getCollapseIcon() {\n      var collapseIcon = this.getIcon(this.collapsed ? 'plus' : 'minus');\n      this.addClass(collapseIcon, 'formio-collapse-icon');\n      return collapseIcon;\n    }\n  }, {\n    key: \"setCollapsed\",\n    value: function setCollapsed(element) {\n      _get(_getPrototypeOf(PanelComponent.prototype), \"setCollapsed\", this).call(this, element);\n\n      if (this.collapseIcon) {\n        var newIcon = this.getCollapseIcon();\n        this.panelTitle.replaceChild(newIcon, this.collapseIcon);\n        this.collapseIcon = newIcon;\n      }\n    }\n    /**\n     * Return if this panel is lazy loadable.\n     * @return {boolean}\n     */\n\n  }, {\n    key: \"checkValidity\",\n    value: function checkValidity(data, dirty) {\n      // Make sure to toggle the collapsed state before checking validity.\n      if (dirty && this.lazyLoadable) {\n        this.lazyLoaded = true;\n        this.addComponents();\n      }\n\n      return _get(_getPrototypeOf(PanelComponent.prototype), \"checkValidity\", this).call(this, data, dirty);\n    }\n  }, {\n    key: \"addComponents\",\n    value: function addComponents(element, data, options, state) {\n      // If they are lazy loading, then only add the components if they toggle the collapsed state.\n      if (this.lazyLoadable) {\n        return;\n      }\n\n      return _get(_getPrototypeOf(PanelComponent.prototype), \"addComponents\", this).call(this, element, data, options, state);\n    }\n  }, {\n    key: \"toggleCollapse\",\n    value: function toggleCollapse() {\n      if (this.lazyLoadable) {\n        this.lazyLoaded = true;\n        this.addComponents();\n      }\n\n      _get(_getPrototypeOf(PanelComponent.prototype), \"toggleCollapse\", this).call(this);\n    }\n  }, {\n    key: \"build\",\n    value: function build(state) {\n      this.component.theme = this.component.theme || 'default';\n      var panelClass = 'mb-2 card border ';\n      panelClass += \"panel panel-\".concat(this.component.theme, \" \");\n      panelClass += this.component.customClass;\n      this.element = this.ce('div', {\n        id: this.id,\n        class: panelClass\n      });\n      this.element.component = this;\n      this.panelBody = this.ce('div', {\n        class: 'card-body panel-body'\n      });\n\n      if (this.component.title && !this.component.hideLabel) {\n        var heading = this.ce('div', {\n          class: \"card-header bg-\".concat(this.component.theme, \" panel-heading\")\n        });\n        this.panelTitle = this.ce('h4', {\n          class: 'mb-0 card-title panel-title'\n        });\n\n        if (this.component.collapsible) {\n          this.collapseIcon = this.getCollapseIcon();\n          this.panelTitle.appendChild(this.collapseIcon);\n          this.panelTitle.appendChild(this.text(' '));\n        }\n\n        this.panelTitle.appendChild(this.text(this.component.title));\n        this.createTooltip(this.panelTitle);\n        heading.appendChild(this.panelTitle);\n        this.setCollapseHeader(heading);\n        this.element.appendChild(heading);\n      } else {\n        this.createTooltip(this.panelBody, this.component, \"\".concat(this.iconClass('question-sign'), \" text-muted formio-hide-label-panel-tooltip\"));\n      }\n\n      this.addComponents(null, null, null, state);\n      this.element.appendChild(this.panelBody);\n      this.setCollapsed();\n      this.attachLogic();\n    }\n  }, {\n    key: \"defaultSchema\",\n    get: function get() {\n      return PanelComponent.schema();\n    }\n  }, {\n    key: \"className\",\n    get: function get() {\n      return \"panel panel-\".concat(this.component.theme, \" \").concat(_get(_getPrototypeOf(PanelComponent.prototype), \"className\", this));\n    }\n  }, {\n    key: \"lazyLoadable\",\n    get: function get() {\n      return !this.options.builder && this.component.lazyLoad && this.component.collapsible && this.collapsed && !this.lazyLoaded;\n    }\n  }]);\n\n  return PanelComponent;\n}(_NestedComponent2.default);\n\nexports.default = PanelComponent;",null]}