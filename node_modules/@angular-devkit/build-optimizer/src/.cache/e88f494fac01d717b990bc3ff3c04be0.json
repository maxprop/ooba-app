{"remainingRequest":"/Users/scottjoscelyne/Desktop/oasis/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/Users/scottjoscelyne/Desktop/oasis/node_modules/formiojs/components/textarea/TextArea.js","dependencies":[{"path":"/Users/scottjoscelyne/Desktop/oasis/node_modules/formiojs/components/textarea/TextArea.js","mtime":1584368630978},{"path":"/Users/scottjoscelyne/Desktop/oasis/node_modules/cache-loader/dist/cjs.js","mtime":1571276078087},{"path":"/Users/scottjoscelyne/Desktop/oasis/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1571276072802}],"contextDependencies":[],"result":["\"use strict\";\n\nrequire(\"core-js/modules/es.symbol\");\n\nrequire(\"core-js/modules/es.symbol.description\");\n\nrequire(\"core-js/modules/es.symbol.iterator\");\n\nrequire(\"core-js/modules/es.array.concat\");\n\nrequire(\"core-js/modules/es.array.iterator\");\n\nrequire(\"core-js/modules/es.array.join\");\n\nrequire(\"core-js/modules/es.array.map\");\n\nrequire(\"core-js/modules/es.function.name\");\n\nrequire(\"core-js/modules/es.object.get-own-property-descriptor\");\n\nrequire(\"core-js/modules/es.object.get-prototype-of\");\n\nrequire(\"core-js/modules/es.object.to-string\");\n\nrequire(\"core-js/modules/es.reflect.get\");\n\nrequire(\"core-js/modules/es.string.iterator\");\n\nrequire(\"core-js/modules/es.string.replace\");\n\nrequire(\"core-js/modules/es.string.trim\");\n\nrequire(\"core-js/modules/web.dom-collections.for-each\");\n\nrequire(\"core-js/modules/web.dom-collections.iterator\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _TextField = _interopRequireDefault(require(\"../textfield/TextField\"));\n\nvar _Formio = _interopRequireDefault(require(\"../../Formio\"));\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nvar _utils = require(\"../../utils/utils\");\n\nvar _nativePromiseOnly = _interopRequireDefault(require(\"native-promise-only\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar TextAreaComponent =\n/*#__PURE__*/\nfunction (_TextFieldComponent) {\n  _inherits(TextAreaComponent, _TextFieldComponent);\n\n  _createClass(TextAreaComponent, null, [{\n    key: \"schema\",\n    value: function schema() {\n      for (var _len = arguments.length, extend = new Array(_len), _key = 0; _key < _len; _key++) {\n        extend[_key] = arguments[_key];\n      }\n\n      return _TextField.default.schema.apply(_TextField.default, [{\n        type: 'textarea',\n        label: 'Text Area',\n        key: 'textArea',\n        rows: 3,\n        wysiwyg: false,\n        editor: ''\n      }].concat(extend));\n    }\n  }, {\n    key: \"builderInfo\",\n    get: function get() {\n      return {\n        title: 'Text Area',\n        group: 'basic',\n        icon: 'fa fa-font',\n        documentation: 'http://help.form.io/userguide/#textarea',\n        weight: 40,\n        schema: TextAreaComponent.schema()\n      };\n    }\n  }]);\n\n  function TextAreaComponent(component, options, data) {\n    var _this2;\n\n    _classCallCheck(this, TextAreaComponent);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(TextAreaComponent).call(this, component, options, data));\n    _this2.wysiwygRendered = false;\n    _this2.editorReady = new _nativePromiseOnly.default(function (resolve) {\n      _this2.editorReadyResolve = resolve;\n    }); // Never submit on enter for text areas.\n\n    _this2.options.submitOnEnter = false;\n    return _this2;\n  }\n\n  _createClass(TextAreaComponent, [{\n    key: \"show\",\n    value: function show(_show, noClear) {\n      if (_show && !this.wysiwygRendered) {\n        this.enableWysiwyg();\n        this.setWysiwygValue(this.dataValue);\n        this.wysiwygRendered = true;\n      } else if (!_show && this.wysiwygRendered) {\n        this.destroyWysiwyg();\n        this.wysiwygRendered = false;\n      }\n\n      return _get(_getPrototypeOf(TextAreaComponent.prototype), \"show\", this).call(this, _show, noClear);\n    }\n  }, {\n    key: \"setupValueElement\",\n    value: function setupValueElement(element) {\n      var value = this.getValue();\n      value = this.isEmpty(value) ? this.defaultViewOnlyValue : this.getView(value);\n\n      if (this.component.wysiwyg) {\n        value = this.interpolate(value);\n      }\n\n      element.innerHTML = value;\n    }\n  }, {\n    key: \"acePlaceholder\",\n    value: function acePlaceholder() {\n      if (!this.component.placeholder || !this.editor) {\n        return;\n      }\n\n      var shouldShow = !this.editor.session.getValue().length;\n      var node = this.editor.renderer.emptyMessageNode;\n\n      if (!shouldShow && node) {\n        this.editor.renderer.scroller.removeChild(this.editor.renderer.emptyMessageNode);\n        this.editor.renderer.emptyMessageNode = null;\n      } else if (shouldShow && !node) {\n        node = this.editor.renderer.emptyMessageNode = this.ce('div');\n        node.textContent = this.t(this.component.placeholder);\n        node.className = 'ace_invisible ace_emptyMessage';\n        node.style.padding = '0 9px';\n        this.editor.renderer.scroller.appendChild(node);\n      }\n    }\n  }, {\n    key: \"updateEditorValue\",\n\n    /**\n     * Updates the editor value.\n     *\n     * @param newValue\n     */\n    value: function updateEditorValue(newValue) {\n      newValue = this.getConvertedValue(this.removeBlanks(newValue));\n\n      if (newValue !== this.dataValue && (!_lodash.default.isEmpty(newValue) || !_lodash.default.isEmpty(this.dataValue))) {\n        this.updateValue({\n          modified: !this.autoModified\n        }, newValue);\n      }\n\n      this.autoModified = false;\n    }\n    /* eslint-disable max-statements */\n\n  }, {\n    key: \"createInput\",\n    value: function createInput(container) {\n      if (this.options.readOnly) {\n        this.input = this.ce('div', {\n          class: 'well'\n        });\n        container.appendChild(this.input);\n        return this.input;\n      } else if (this.isPlain) {\n        return _get(_getPrototypeOf(TextAreaComponent.prototype), \"createInput\", this).call(this, container);\n      }\n\n      if (!this.errorContainer) {\n        this.errorContainer = container;\n      }\n\n      if (this.htmlView) {\n        this.input = this.ce('div', {\n          class: 'well'\n        });\n        container.appendChild(this.input);\n        return this.input;\n      } // Add the input.\n\n\n      this.input = this.ce('div', {\n        class: 'formio-wysiwyg-editor'\n      });\n      container.appendChild(this.input);\n      this.addCounter(container);\n      return this.input;\n    }\n    /* eslint-enable max-statements */\n\n  }, {\n    key: \"enableWysiwyg\",\n    value: function enableWysiwyg() {\n      var _this3 = this;\n\n      if (this.isPlain || this.options.readOnly || this.options.htmlView) {\n        if (this.autoExpand) {\n          this.element.childNodes.forEach(function (element) {\n            if (element.nodeName === 'TEXTAREA') {\n              _this3.addAutoExpanding(element);\n            }\n          });\n        }\n\n        return;\n      }\n\n      if (this.component.editor === 'ace') {\n        _Formio.default.requireLibrary('ace', 'ace', 'https://cdnjs.cloudflare.com/ajax/libs/ace/1.4.1/ace.js', true).then(function () {\n          var mode = _this3.component.as || 'javascript';\n          _this3.editor = ace.edit(_this3.input);\n\n          _this3.editor.on('change', function () {\n            return _this3.updateEditorValue(_this3.editor.getValue());\n          });\n\n          _this3.editor.getSession().setTabSize(2);\n\n          _this3.editor.getSession().setMode(\"ace/mode/\".concat(mode));\n\n          _this3.editor.on('input', function () {\n            return _this3.acePlaceholder();\n          });\n\n          setTimeout(function () {\n            return _this3.acePlaceholder();\n          }, 100);\n\n          _this3.editorReadyResolve(_this3.editor);\n\n          return _this3.editor;\n        });\n\n        return this.input;\n      }\n\n      if (this.component.editor === 'ckeditor') {\n        var settings = this.component.wysiwyg || {};\n        settings.rows = this.component.rows;\n        this.addCKE(this.input, settings, function (newValue) {\n          return _this3.updateEditorValue(newValue);\n        }).then(function (editor) {\n          _this3.editor = editor;\n\n          if (_this3.options.readOnly || _this3.component.disabled) {\n            _this3.editor.isReadOnly = true;\n          }\n\n          _this3.editorReadyResolve(_this3.editor);\n\n          return editor;\n        });\n        return this.input;\n      } // Normalize the configurations.\n\n\n      if (this.component.wysiwyg && (this.component.wysiwyg.hasOwnProperty('toolbarGroups') || this.component.wysiwyg.hasOwnProperty('toolbar'))) {\n        console.warn('The WYSIWYG settings are configured for CKEditor. For this renderer, you will need to use configurations for the Quill Editor. See https://quilljs.com/docs/configuration for more information.');\n        this.component.wysiwyg = this.wysiwygDefault;\n        this.emit('componentEdit', this);\n      }\n\n      if (!this.component.wysiwyg || typeof this.component.wysiwyg === 'boolean') {\n        this.component.wysiwyg = this.wysiwygDefault;\n        this.emit('componentEdit', this);\n      } // Add the quill editor.\n\n\n      this.addQuill(this.input, this.component.wysiwyg, function () {\n        return _this3.updateEditorValue(_this3.quill.root.innerHTML);\n      }).then(function (quill) {\n        if (_this3.component.isUploadEnabled) {\n          var _this = _this3;\n          quill.getModule('toolbar').addHandler('image', function () {\n            //we need initial 'this' because quill calls this method with its own context and we need some inner quill methods exposed in it\n            //we also need current component instance as we use some fields and methods from it as well\n            _this.imageHandler.call(_this, this);\n          });\n        }\n\n        quill.root.spellcheck = _this3.component.spellcheck;\n\n        if (_this3.options.readOnly || _this3.component.disabled) {\n          quill.disable();\n        }\n\n        _this3.editorReadyResolve(quill);\n\n        return quill;\n      }).catch(function (err) {\n        return console.warn(err);\n      });\n    }\n  }, {\n    key: \"destroyWysiwyg\",\n    value: function destroyWysiwyg() {\n      var _this4 = this;\n\n      if (this.editor) {\n        this.editorReady = new _nativePromiseOnly.default(function (resolve) {\n          _this4.editorReadyResolve = resolve;\n        });\n        this.editor.destroy();\n      }\n    }\n  }, {\n    key: \"imageHandler\",\n    value: function imageHandler(quillInstance) {\n      var _this5 = this;\n\n      var fileInput = quillInstance.container.querySelector('input.ql-image[type=file]');\n\n      if (fileInput == null) {\n        fileInput = document.createElement('input');\n        fileInput.setAttribute('type', 'file');\n        fileInput.setAttribute('accept', 'image/*');\n        fileInput.classList.add('ql-image');\n        fileInput.addEventListener('change', function () {\n          var files = fileInput.files;\n          var range = quillInstance.quill.getSelection(true);\n\n          if (!files || !files.length) {\n            console.warn('No files selected');\n            return;\n          }\n\n          quillInstance.quill.enable(false);\n          var _this5$component = _this5.component,\n              uploadStorage = _this5$component.uploadStorage,\n              uploadUrl = _this5$component.uploadUrl,\n              uploadOptions = _this5$component.uploadOptions,\n              uploadDir = _this5$component.uploadDir;\n          var requestData;\n\n          _this5.root.formio.uploadFile(uploadStorage, files[0], (0, _utils.uniqueName)(files[0].name), uploadDir || '', //should pass empty string if undefined\n          null, uploadUrl, uploadOptions).then(function (result) {\n            requestData = result;\n            return _this5.root.formio.downloadFile(result);\n          }).then(function (result) {\n            quillInstance.quill.enable(true);\n            var Delta = Quill.import('delta');\n            quillInstance.quill.updateContents(new Delta().retain(range.index).delete(range.length).insert({\n              image: result.url\n            }, {\n              alt: JSON.stringify(requestData)\n            }), Quill.sources.USER);\n            fileInput.value = '';\n          }).catch(function (error) {\n            console.warn('Quill image upload failed');\n            console.warn(error);\n            quillInstance.quill.enable(true);\n          });\n        });\n        quillInstance.container.appendChild(fileInput);\n      }\n\n      fileInput.click();\n    }\n  }, {\n    key: \"setWysiwygValue\",\n    value: function setWysiwygValue(value, skipSetting) {\n      var _this6 = this;\n\n      if (this.isPlain || this.options.readOnly || this.options.htmlView) {\n        return;\n      }\n\n      if (this.editorReady) {\n        this.editorReady.then(function (editor) {\n          _this6.autoModified = _lodash.default.isNil(_this6.autoModified) ? true : _this6.autoModified;\n\n          if (!skipSetting) {\n            if (_this6.component.editor === 'ace') {\n              editor.setValue(_this6.setConvertedValue(value));\n            } else if (_this6.component.editor === 'ckeditor') {\n              editor.data.set(_this6.setConvertedValue(value));\n            } else {\n              if (_this6.component.isUploadEnabled) {\n                _this6.setAsyncConvertedValue(value).then(function (result) {\n                  editor.setContents(editor.clipboard.convert(result));\n                });\n              } else {\n                editor.setContents(editor.clipboard.convert(_this6.setConvertedValue(value)));\n              }\n            }\n          }\n        });\n      }\n    }\n  }, {\n    key: \"setConvertedValue\",\n    value: function setConvertedValue(value) {\n      if (this.component.as && this.component.as === 'json' && value) {\n        try {\n          value = JSON.stringify(value, null, 2);\n        } catch (err) {\n          console.warn(err);\n        }\n      }\n\n      if (!_lodash.default.isString(value)) {\n        value = '';\n      }\n\n      return value;\n    }\n  }, {\n    key: \"setAsyncConvertedValue\",\n    value: function setAsyncConvertedValue(value) {\n      if (this.component.as && this.component.as === 'json' && value) {\n        try {\n          value = JSON.stringify(value, null, 2);\n        } catch (err) {\n          console.warn(err);\n        }\n      }\n\n      if (!_lodash.default.isString(value)) {\n        value = '';\n      }\n\n      var htmlDoc = new DOMParser().parseFromString(value, 'text/html');\n      var images = htmlDoc.getElementsByTagName('img');\n\n      if (images.length) {\n        return this.setImagesUrl(images).then(function () {\n          value = htmlDoc.getElementsByTagName('body')[0].firstElementChild;\n          return new XMLSerializer().serializeToString(value);\n        });\n      } else {\n        return _nativePromiseOnly.default.resolve(value);\n      }\n    }\n  }, {\n    key: \"setImagesUrl\",\n    value: function setImagesUrl(images) {\n      var _this7 = this;\n\n      return _nativePromiseOnly.default.all(_lodash.default.map(images, function (image) {\n        var requestData;\n\n        try {\n          requestData = JSON.parse(image.getAttribute('alt'));\n        } catch (error) {\n          console.warn(error);\n        }\n\n        return _this7.root.formio.downloadFile(requestData).then(function (result) {\n          image.setAttribute('src', result.url);\n        });\n      }));\n    }\n  }, {\n    key: \"addAutoExpanding\",\n    value: function addAutoExpanding(textarea) {\n      var heightOffset = null;\n      var previousHeight = null;\n\n      var changeOverflow = function changeOverflow(value) {\n        var width = textarea.style.width;\n        textarea.style.width = '0px';\n        textarea.offsetWidth;\n        textarea.style.width = width;\n        textarea.style.overflowY = value;\n      };\n\n      var preventParentScroll = function preventParentScroll(element, changeSize) {\n        var nodeScrolls = [];\n\n        while (element && element.parentNode && element.parentNode instanceof Element) {\n          if (element.parentNode.scrollTop) {\n            nodeScrolls.push({\n              node: element.parentNode,\n              scrollTop: element.parentNode.scrollTop\n            });\n          }\n\n          element = element.parentNode;\n        }\n\n        changeSize();\n        nodeScrolls.forEach(function (nodeScroll) {\n          nodeScroll.node.scrollTop = nodeScroll.scrollTop;\n        });\n      };\n\n      var resize = function resize() {\n        if (textarea.scrollHeight === 0) {\n          return;\n        }\n\n        preventParentScroll(textarea, function () {\n          textarea.style.height = '';\n          textarea.style.height = \"\".concat(textarea.scrollHeight + heightOffset, \"px\");\n        });\n      };\n\n      var update = _lodash.default.debounce(function () {\n        resize();\n        var styleHeight = Math.round(parseFloat(textarea.style.height));\n        var computed = window.getComputedStyle(textarea, null);\n        var currentHeight = textarea.offsetHeight;\n\n        if (currentHeight < styleHeight && computed.overflowY === 'hidden') {\n          changeOverflow('scroll');\n        } else if (computed.overflowY !== 'hidden') {\n          changeOverflow('hidden');\n        }\n\n        resize();\n        currentHeight = textarea.offsetHeight;\n\n        if (previousHeight !== currentHeight) {\n          previousHeight = currentHeight;\n          update();\n        }\n      }, 200);\n\n      var computedStyle = window.getComputedStyle(textarea, null);\n      textarea.style.resize = 'none';\n      heightOffset = parseFloat(computedStyle.borderTopWidth) + parseFloat(computedStyle.borderBottomWidth) || 0;\n\n      if (window) {\n        this.addEventListener(window, 'resize', update);\n      }\n\n      this.addEventListener(textarea, 'input', update);\n      this.on('initialized', update);\n      this.updateSize = update;\n      update();\n    }\n  }, {\n    key: \"removeBlanks\",\n    value: function removeBlanks(value) {\n      if (!value) {\n        return value;\n      }\n\n      var removeBlanks = function removeBlanks(input) {\n        if (typeof input !== 'string') {\n          return input;\n        }\n\n        return input.replace(/<p>&nbsp;<\\/p>|<p><br><\\/p>|<p><br>&nbsp;<\\/p>/g, '').trim();\n      };\n\n      if (Array.isArray(value)) {\n        value.forEach(function (input, index) {\n          value[index] = removeBlanks(input);\n        });\n      } else {\n        value = removeBlanks(value);\n      }\n\n      return value;\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange() {\n      var _get2;\n\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      (_get2 = _get(_getPrototypeOf(TextAreaComponent.prototype), \"onChange\", this)).call.apply(_get2, [this].concat(args));\n\n      if (this.updateSize) {\n        this.updateSize();\n      }\n    }\n  }, {\n    key: \"hasChanged\",\n    value: function hasChanged(newValue, oldValue) {\n      return _get(_getPrototypeOf(TextAreaComponent.prototype), \"hasChanged\", this).call(this, this.removeBlanks(newValue), this.removeBlanks(oldValue));\n    }\n  }, {\n    key: \"isEmpty\",\n    value: function isEmpty(value) {\n      return _get(_getPrototypeOf(TextAreaComponent.prototype), \"isEmpty\", this).call(this, this.removeBlanks(value));\n    }\n  }, {\n    key: \"setValue\",\n    value: function setValue(value, flags) {\n      var _this8 = this;\n\n      var skipSetting = _lodash.default.isEqual(value, this.getValue());\n\n      value = value || '';\n\n      if (this.options.readOnly || this.htmlView) {\n        // For readOnly, just view the contents.\n        if (this.input) {\n          if (Array.isArray(value)) {\n            value = value.join('<br/><br/>');\n          }\n\n          this.input.innerHTML = this.interpolate(value);\n        }\n\n        this.dataValue = value;\n        return;\n      } else if (this.isPlain) {\n        value = Array.isArray(value) ? value.map(function (val) {\n          return _this8.setConvertedValue(val);\n        }) : this.setConvertedValue(value);\n        return _get(_getPrototypeOf(TextAreaComponent.prototype), \"setValue\", this).call(this, value, flags);\n      }\n\n      this.setWysiwygValue(value, skipSetting, flags);\n      return this.updateValue(flags);\n    }\n  }, {\n    key: \"getConvertedValue\",\n    value: function getConvertedValue(value) {\n      if (this.component.as && this.component.as === 'json' && value) {\n        try {\n          value = JSON.parse(value);\n        } catch (err) {\n          console.warn(err);\n        }\n      }\n\n      return value;\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      if (this.editorReady) {\n        this.editorReady.then(function (editor) {\n          return editor.destroy();\n        });\n      }\n\n      if (this.updateSize) {\n        this.removeEventListener(window, 'resize', this.updateSize);\n      }\n\n      return _get(_getPrototypeOf(TextAreaComponent.prototype), \"destroy\", this).call(this);\n    }\n  }, {\n    key: \"getValue\",\n    value: function getValue() {\n      if (this.viewOnly || this.htmlView || this.options.readOnly) {\n        return this.dataValue;\n      }\n\n      if (this.isPlain) {\n        return this.getConvertedValue(_get(_getPrototypeOf(TextAreaComponent.prototype), \"getValue\", this).call(this));\n      }\n\n      return this.dataValue;\n    }\n  }, {\n    key: \"elementInfo\",\n    value: function elementInfo() {\n      var info = _get(_getPrototypeOf(TextAreaComponent.prototype), \"elementInfo\", this).call(this);\n\n      info.type = 'textarea';\n\n      if (this.component.rows) {\n        info.attr.rows = this.component.rows;\n      }\n\n      return info;\n    }\n  }, {\n    key: \"defaultSchema\",\n    get: function get() {\n      return TextAreaComponent.schema();\n    }\n  }, {\n    key: \"isPlain\",\n    get: function get() {\n      return !this.component.wysiwyg && !this.component.editor;\n    }\n  }, {\n    key: \"htmlView\",\n    get: function get() {\n      return this.options.readOnly && this.component.wysiwyg;\n    }\n  }, {\n    key: \"autoExpand\",\n    get: function get() {\n      return this.component.autoExpand;\n    }\n  }, {\n    key: \"defaultValue\",\n    get: function get() {\n      var defaultValue = _get(_getPrototypeOf(TextAreaComponent.prototype), \"defaultValue\", this);\n\n      if (this.component.wysiwyg && !defaultValue) {\n        defaultValue = '<p><br></p>';\n      }\n\n      return defaultValue;\n    }\n  }]);\n\n  return TextAreaComponent;\n}(_TextField.default);\n\nexports.default = TextAreaComponent;",null]}