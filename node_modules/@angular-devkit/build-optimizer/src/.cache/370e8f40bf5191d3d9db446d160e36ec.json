{"remainingRequest":"/Users/scottjoscelyne/Desktop/oasis/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/Users/scottjoscelyne/Desktop/oasis/node_modules/angular-formio/formio.service.js","dependencies":[{"path":"/Users/scottjoscelyne/Desktop/oasis/node_modules/angular-formio/formio.service.js","mtime":1581861141283},{"path":"/Users/scottjoscelyne/Desktop/oasis/node_modules/cache-loader/dist/cjs.js","mtime":1571276078087},{"path":"/Users/scottjoscelyne/Desktop/oasis/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1571276072802}],"contextDependencies":[],"result":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nimport { Observable } from 'rxjs';\nimport { Formio } from 'formiojs';\nvar FormioService = /*@__PURE__*/ (function () {\n    function FormioService(url, options) {\n        this.url = url;\n        this.options = options;\n        this.formio = new Formio(this.url, this.options);\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    FormioService.prototype.requestWrapper = /**\n     * @param {?} fn\n     * @return {?}\n     */\n        function (fn) {\n            /** @type {?} */\n            var record;\n            /** @type {?} */\n            var called = false;\n            return Observable.create((function (observer) {\n                try {\n                    if (!called) {\n                        called = true;\n                        fn()\n                            .then((function (_record) {\n                            record = _record;\n                            observer.next(record);\n                            observer.complete();\n                        }))\n                            .catch((function (err) { return observer.error(err); }));\n                    }\n                    else if (record) {\n                        observer.next(record);\n                        observer.complete();\n                    }\n                }\n                catch (err) {\n                    observer.error(err);\n                }\n            }));\n        };\n    /**\n     * @param {?} form\n     * @return {?}\n     */\n    FormioService.prototype.saveForm = /**\n     * @param {?} form\n     * @return {?}\n     */\n        function (form) {\n            var _this = this;\n            return this.requestWrapper((function () { return _this.formio.saveForm(form); }));\n        };\n    /**\n     * @param {?=} options\n     * @return {?}\n     */\n    FormioService.prototype.loadForm = /**\n     * @param {?=} options\n     * @return {?}\n     */\n        function (options) {\n            var _this = this;\n            return this.requestWrapper((function () { return _this.formio.loadForm(options); }));\n        };\n    /**\n     * @return {?}\n     */\n    FormioService.prototype.loadSubmission = /**\n     * @return {?}\n     */\n        function () {\n            var _this = this;\n            return this.requestWrapper((function () { return _this.formio.loadSubmission(); }));\n        };\n    /**\n     * @param {?} submission\n     * @param {?=} opts\n     * @return {?}\n     */\n    FormioService.prototype.saveSubmission = /**\n     * @param {?} submission\n     * @param {?=} opts\n     * @return {?}\n     */\n        function (submission, opts) {\n            var _this = this;\n            return this.requestWrapper((function () { return _this.formio.saveSubmission(submission, opts); }));\n        };\n    /**\n     * @return {?}\n     */\n    FormioService.prototype.loadSubmissions = /**\n     * @return {?}\n     */\n        function () {\n            var _this = this;\n            return this.requestWrapper((function () { return _this.formio.loadSubmissions(); }));\n        };\n    return FormioService;\n}());\nexport { FormioService };\nif (false) {\n    /** @type {?} */\n    FormioService.prototype.formio;\n    /** @type {?} */\n    FormioService.prototype.url;\n    /** @type {?} */\n    FormioService.prototype.options;\n}\n",null]}