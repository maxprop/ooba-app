{"remainingRequest":"/Users/scottjoscelyne/Desktop/oasis/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/Users/scottjoscelyne/Desktop/oasis/node_modules/formiojs/components/recaptcha/ReCaptcha.js","dependencies":[{"path":"/Users/scottjoscelyne/Desktop/oasis/node_modules/formiojs/components/recaptcha/ReCaptcha.js","mtime":1581861142294},{"path":"/Users/scottjoscelyne/Desktop/oasis/node_modules/cache-loader/dist/cjs.js","mtime":1571276078087},{"path":"/Users/scottjoscelyne/Desktop/oasis/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1571276072802}],"contextDependencies":[],"result":["\"use strict\";\n\nrequire(\"core-js/modules/es.symbol\");\n\nrequire(\"core-js/modules/es.symbol.description\");\n\nrequire(\"core-js/modules/es.symbol.iterator\");\n\nrequire(\"core-js/modules/es.array.concat\");\n\nrequire(\"core-js/modules/es.array.iterator\");\n\nrequire(\"core-js/modules/es.function.name\");\n\nrequire(\"core-js/modules/es.object.get-own-property-descriptor\");\n\nrequire(\"core-js/modules/es.object.get-prototype-of\");\n\nrequire(\"core-js/modules/es.object.to-string\");\n\nrequire(\"core-js/modules/es.reflect.get\");\n\nrequire(\"core-js/modules/es.string.iterator\");\n\nrequire(\"core-js/modules/web.dom-collections.iterator\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _Base = _interopRequireDefault(require(\"../base/Base\"));\n\nvar _Formio = _interopRequireDefault(require(\"../../Formio\"));\n\nvar _get3 = _interopRequireDefault(require(\"lodash/get\"));\n\nvar _nativePromiseOnly = _interopRequireDefault(require(\"native-promise-only\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get2(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get2 = Reflect.get; } else { _get2 = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get2(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar ReCaptchaComponent =\n/*#__PURE__*/\nfunction (_BaseComponent) {\n  _inherits(ReCaptchaComponent, _BaseComponent);\n\n  function ReCaptchaComponent() {\n    _classCallCheck(this, ReCaptchaComponent);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ReCaptchaComponent).apply(this, arguments));\n  }\n\n  _createClass(ReCaptchaComponent, [{\n    key: \"createInput\",\n    value: function createInput() {\n      if (this.options.builder) {\n        // We need to see it in builder mode.\n        this.append(this.text(this.name));\n      } else {\n        var siteKey = (0, _get3.default)(this.root.form, 'settings.recaptcha.siteKey');\n\n        if (siteKey) {\n          var recaptchaApiScriptUrl = \"https://www.google.com/recaptcha/api.js?render=\".concat(siteKey);\n          this.recaptchaApiReady = _Formio.default.requireLibrary('googleRecaptcha', 'grecaptcha', recaptchaApiScriptUrl, true);\n        } else {\n          console.warn('There is no Site Key specified in settings in form JSON');\n        }\n      }\n    }\n  }, {\n    key: \"createLabel\",\n    value: function createLabel() {\n      return;\n    }\n  }, {\n    key: \"verify\",\n    value: function verify(actionName) {\n      var _this = this;\n\n      var siteKey = (0, _get3.default)(this.root.form, 'settings.recaptcha.siteKey');\n\n      if (!siteKey) {\n        console.warn('There is no Site Key specified in settings in form JSON');\n        return;\n      }\n\n      if (!this.recaptchaApiReady) {\n        var recaptchaApiScriptUrl = \"https://www.google.com/recaptcha/api.js?render=\".concat((0, _get3.default)(this.root.form, 'settings.recaptcha.siteKey'));\n        this.recaptchaApiReady = _Formio.default.requireLibrary('googleRecaptcha', 'grecaptcha', recaptchaApiScriptUrl, true);\n      }\n\n      if (this.recaptchaApiReady) {\n        this.recaptchaVerifiedPromise = new _nativePromiseOnly.default(function (resolve, reject) {\n          _this.recaptchaApiReady.then(function () {\n            grecaptcha.ready(function () {\n              grecaptcha.execute(siteKey, {\n                action: actionName\n              }).then(function (token) {\n                return _this.sendVerificationRequest(token);\n              }).then(function (verificationResult) {\n                _this.setValue(verificationResult);\n\n                return resolve(verificationResult);\n              });\n            });\n          }).catch(function () {\n            return reject();\n          });\n        });\n      }\n    }\n  }, {\n    key: \"beforeSubmit\",\n    value: function beforeSubmit() {\n      if (this.recaptchaVerifiedPromise) {\n        return this.recaptchaVerifiedPromise;\n      }\n\n      return _get2(_getPrototypeOf(ReCaptchaComponent.prototype), \"beforeSubmit\", this).call(this);\n    }\n  }, {\n    key: \"sendVerificationRequest\",\n    value: function sendVerificationRequest(token) {\n      return _Formio.default.makeStaticRequest(\"\".concat(_Formio.default.projectUrl, \"/recaptcha?recaptchaToken=\").concat(token));\n    }\n  }, {\n    key: \"setValue\",\n    value: function setValue(value) {\n      var changed = this.hasChanged(value, this.dataValue);\n      this.dataValue = value;\n      return changed;\n    }\n  }, {\n    key: \"getValue\",\n    value: function getValue() {\n      return this.dataValue;\n    }\n  }], [{\n    key: \"schema\",\n    value: function schema() {\n      for (var _len = arguments.length, extend = new Array(_len), _key = 0; _key < _len; _key++) {\n        extend[_key] = arguments[_key];\n      }\n\n      return _Base.default.schema.apply(_Base.default, [{\n        type: 'recaptcha',\n        key: 'recaptcha',\n        label: 'reCAPTCHA'\n      }].concat(extend));\n    }\n  }, {\n    key: \"builderInfo\",\n    get: function get() {\n      return {\n        title: 'reCAPTCHA',\n        group: 'advanced',\n        icon: 'fa fa-refresh',\n        documentation: 'http://help.form.io/userguide/#recaptcha',\n        weight: 550,\n        schema: ReCaptchaComponent.schema()\n      };\n    }\n  }]);\n\n  return ReCaptchaComponent;\n}(_Base.default);\n\nexports.default = ReCaptchaComponent;",null]}