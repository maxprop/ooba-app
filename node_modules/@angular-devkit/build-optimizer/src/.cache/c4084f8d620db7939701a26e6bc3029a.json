{"remainingRequest":"/Users/scottjoscelyne/Desktop/oasis/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/Users/scottjoscelyne/Desktop/oasis/node_modules/angular-formio/components/formbuilder/formbuilder.component.js","dependencies":[{"path":"/Users/scottjoscelyne/Desktop/oasis/node_modules/angular-formio/components/formbuilder/formbuilder.component.js","mtime":1581861141280},{"path":"/Users/scottjoscelyne/Desktop/oasis/node_modules/cache-loader/dist/cjs.js","mtime":1571276078087},{"path":"/Users/scottjoscelyne/Desktop/oasis/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1571276072802}],"contextDependencies":[],"result":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nimport { Component, Input, ViewEncapsulation, Optional, ViewChild, EventEmitter, Output } from '@angular/core';\nimport { FormioAppConfig } from '../../formio.config';\nimport { Formio, FormBuilder, Utils } from 'formiojs';\nimport { assign } from 'lodash';\n/* tslint:disable */\nvar FormBuilderComponent = /*@__PURE__*/ (function () {\n    function FormBuilderComponent(config) {\n        var _this = this;\n        this.config = config;\n        this.componentAdding = false;\n        this.noeval = false;\n        if (this.config) {\n            Formio.setBaseUrl(this.config.apiUrl);\n            Formio.setProjectUrl(this.config.appUrl);\n        }\n        else {\n            console.warn('You must provide an AppConfig within your application!');\n        }\n        this.change = new EventEmitter();\n        this.ready = new Promise((function (resolve) {\n            _this.readyResolve = resolve;\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    FormBuilderComponent.prototype.ngOnInit = /**\n     * @return {?}\n     */\n        function () {\n            Utils.Evaluator.noeval = this.noeval;\n        };\n    /**\n     * @param {?} instance\n     * @return {?}\n     */\n    FormBuilderComponent.prototype.setInstance = /**\n     * @param {?} instance\n     * @return {?}\n     */\n        function (instance) {\n            var _this = this;\n            this.formio = instance;\n            instance.off('addComponent');\n            instance.off('saveComponent');\n            instance.off('updateComponent');\n            instance.off('deleteComponent');\n            instance.on('addComponent', (function (event) {\n                if (event.isNew) {\n                    _this.componentAdding = true;\n                }\n                else {\n                    _this.change.emit({\n                        type: 'addComponent',\n                        builder: instance,\n                        form: instance.schema,\n                        component: event\n                    });\n                    _this.componentAdding = false;\n                }\n            }));\n            instance.on('saveComponent', (function (event) {\n                _this.change.emit({\n                    type: _this.componentAdding ? 'addComponent' : 'saveComponent',\n                    builder: instance,\n                    form: instance.schema,\n                    component: event\n                });\n                _this.componentAdding = false;\n            }));\n            instance.on('updateComponent', (function (event) {\n                return _this.change.emit({\n                    type: 'updateComponent',\n                    builder: instance,\n                    form: instance.schema,\n                    component: event\n                });\n            }));\n            instance.on('deleteComponent', (function (event) {\n                return _this.change.emit({\n                    type: 'deleteComponent',\n                    builder: instance,\n                    form: instance.schema,\n                    component: event\n                });\n            }));\n            this.readyResolve(instance);\n            return instance;\n        };\n    /**\n     * @param {?} display\n     * @return {?}\n     */\n    FormBuilderComponent.prototype.setDisplay = /**\n     * @param {?} display\n     * @return {?}\n     */\n        function (display) {\n            var _this = this;\n            return this.builder.setDisplay(display).then((function (instance) { return _this.setInstance(instance); }));\n        };\n    /**\n     * @param {?} form\n     * @return {?}\n     */\n    FormBuilderComponent.prototype.buildForm = /**\n     * @param {?} form\n     * @return {?}\n     */\n        function (form) {\n            var _this = this;\n            if (!form || !this.builderElement || !this.builderElement.nativeElement) {\n                return;\n            }\n            if (this.builder) {\n                return this.setDisplay(form.display).then((function () {\n                    _this.builder.form = form;\n                    _this.builder.instance.form = form;\n                    return _this.builder.instance;\n                }));\n            }\n            /** @type {?} */\n            var Builder = this.formbuilder || FormBuilder;\n            this.builder = new Builder(this.builderElement.nativeElement, form, assign({ icons: 'fontawesome' }, this.options || {}));\n            return this.builder.render().then((function (instance) { return _this.setInstance(instance); }));\n        };\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    FormBuilderComponent.prototype.ngOnChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n        function (changes) {\n            if (changes.form && changes.form.currentValue) {\n                this.buildForm(changes.form.currentValue || { components: [] });\n            }\n        };\n    /**\n     * @return {?}\n     */\n    FormBuilderComponent.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n        function () {\n            if (this.formio) {\n                this.formio.destroy();\n            }\n        };\n    return FormBuilderComponent;\n}());\nexport { FormBuilderComponent };\nif (false) {\n    /** @type {?} */\n    FormBuilderComponent.prototype.ready;\n    /** @type {?} */\n    FormBuilderComponent.prototype.readyResolve;\n    /** @type {?} */\n    FormBuilderComponent.prototype.formio;\n    /** @type {?} */\n    FormBuilderComponent.prototype.builder;\n    /** @type {?} */\n    FormBuilderComponent.prototype.componentAdding;\n    /** @type {?} */\n    FormBuilderComponent.prototype.form;\n    /** @type {?} */\n    FormBuilderComponent.prototype.options;\n    /** @type {?} */\n    FormBuilderComponent.prototype.formbuilder;\n    /** @type {?} */\n    FormBuilderComponent.prototype.noeval;\n    /** @type {?} */\n    FormBuilderComponent.prototype.change;\n    /** @type {?} */\n    FormBuilderComponent.prototype.builderElement;\n    /**\n     * @type {?}\n     * @private\n     */\n    FormBuilderComponent.prototype.config;\n}\n",null]}